// <auto-generated />
using System;
using CorrespondenceEF;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace CorrespondenceEF.Migrations
{
    [DbContext(typeof(CorrespondenceContext))]
    partial class CorrespondenceContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.3")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("CorrespondenceEF.Domain.City", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Cities");
                });

            modelBuilder.Entity("CorrespondenceEF.Domain.Contractor", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PassportNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("PositionId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("PositionId");

                    b.ToTable("Contractors");
                });

            modelBuilder.Entity("CorrespondenceEF.Domain.Flow", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("SendingIdId")
                        .HasColumnType("int");

                    b.Property<int?>("StatusIdId")
                        .HasColumnType("int");

                    b.Property<DateTimeOffset>("UpdateStatusDateTime")
                        .HasColumnType("datetimeoffset");

                    b.HasKey("Id");

                    b.HasIndex("SendingIdId");

                    b.HasIndex("StatusIdId");

                    b.ToTable("Flows");
                });

            modelBuilder.Entity("CorrespondenceEF.Domain.Office", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("CityId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CityId");

                    b.ToTable("Offices");
                });

            modelBuilder.Entity("CorrespondenceEF.Domain.Position", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Positions");
                });

            modelBuilder.Entity("CorrespondenceEF.Domain.PostalItem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("NumberOfPages")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("PostalItems");
                });

            modelBuilder.Entity("CorrespondenceEF.Domain.Sending", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("PostalItemIdId")
                        .HasColumnType("int");

                    b.Property<int?>("ReceiverOfficeIdId")
                        .HasColumnType("int");

                    b.Property<int?>("ReceiverPassportNumberId")
                        .HasColumnType("int");

                    b.Property<int?>("SenderOfficeIdId")
                        .HasColumnType("int");

                    b.Property<int?>("SenderPassportNumberId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("PostalItemIdId");

                    b.HasIndex("ReceiverOfficeIdId");

                    b.HasIndex("ReceiverPassportNumberId");

                    b.HasIndex("SenderOfficeIdId");

                    b.HasIndex("SenderPassportNumberId");

                    b.ToTable("Sendings");
                });

            modelBuilder.Entity("CorrespondenceEF.Domain.Status", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Statuses");
                });

            modelBuilder.Entity("CorrespondenceEF.Domain.Contractor", b =>
                {
                    b.HasOne("CorrespondenceEF.Domain.Position", "Position")
                        .WithMany()
                        .HasForeignKey("PositionId");

                    b.Navigation("Position");
                });

            modelBuilder.Entity("CorrespondenceEF.Domain.Flow", b =>
                {
                    b.HasOne("CorrespondenceEF.Domain.Sending", "SendingId")
                        .WithMany()
                        .HasForeignKey("SendingIdId");

                    b.HasOne("CorrespondenceEF.Domain.Status", "StatusId")
                        .WithMany()
                        .HasForeignKey("StatusIdId");

                    b.Navigation("SendingId");

                    b.Navigation("StatusId");
                });

            modelBuilder.Entity("CorrespondenceEF.Domain.Office", b =>
                {
                    b.HasOne("CorrespondenceEF.Domain.City", "City")
                        .WithMany()
                        .HasForeignKey("CityId");

                    b.Navigation("City");
                });

            modelBuilder.Entity("CorrespondenceEF.Domain.Sending", b =>
                {
                    b.HasOne("CorrespondenceEF.Domain.PostalItem", "PostalItemId")
                        .WithMany()
                        .HasForeignKey("PostalItemIdId");

                    b.HasOne("CorrespondenceEF.Domain.Office", "ReceiverOfficeId")
                        .WithMany()
                        .HasForeignKey("ReceiverOfficeIdId");

                    b.HasOne("CorrespondenceEF.Domain.Contractor", "ReceiverPassportNumber")
                        .WithMany()
                        .HasForeignKey("ReceiverPassportNumberId");

                    b.HasOne("CorrespondenceEF.Domain.Office", "SenderOfficeId")
                        .WithMany()
                        .HasForeignKey("SenderOfficeIdId");

                    b.HasOne("CorrespondenceEF.Domain.Contractor", "SenderPassportNumber")
                        .WithMany()
                        .HasForeignKey("SenderPassportNumberId");

                    b.Navigation("PostalItemId");

                    b.Navigation("ReceiverOfficeId");

                    b.Navigation("ReceiverPassportNumber");

                    b.Navigation("SenderOfficeId");

                    b.Navigation("SenderPassportNumber");
                });
#pragma warning restore 612, 618
        }
    }
}
